import os
from urllib import parse

import json
import requests
import time

INTERVAL = 60 * 10  # 10 min, same as actions schedule cron
PUSH_API = 'http://un1kmsg.happysec.cn/index/processmsg/'

str_to_timestamp = lambda s: int(time.mktime(time.strptime(s, "%Y-%m-%dT%H:%M:%SZ")))


def get_last_created():
    try:
        api = "https://api.github.com/search/repositories?q=CVE-2022&sort=updated"
        req = requests.get(api).text
        cve_description = json.loads(req)['items'][0]['description']
        cve_url = json.loads(req)['items'][0]['html_url']
        created_at = json.loads(req)['items'][0]['created_at']
        return cve_url, cve_description, created_at
    except Exception as e:
        print(e, "github链接不通")
        return (None,) * 3


def send(apikey, title, content):
    content = parse.quote(content)
    res = requests.post(PUSH_API,
                        data={'title': title, 'content': content, 'sendkey': apikey},
                        headers={"Content-Type": "application/x-www-form-urlencoded"}).text
    print(res)


def main():
    cve_url, cve_description, created_at = get_last_created()
    if not cve_url: return

    created_at = str_to_timestamp(created_at)
    now = int(time.time())

    # 推送标题
    text = r'有新的CVE送达'

    # 监控间隔内创建的仓库为新仓库
    if now - created_at < INTERVAL:
        print('[+] 出现新CVE了')
        send(os.getenv("Un1kMsg_KEY"), text, cve_url + "[" + cve_description + "]")
    else:
        print('[-] 无最新内容')


if __name__ == '__main__':
    main()
